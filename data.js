db.preguntas.insertOne({ pregunta: "¿Qué son los índices en MongoDB y para qué se utilizan?", opciones: [ "Los índices son estructuras de datos que permiten buscar documentos de forma más rápida y eficiente.","Los índices son necesarios para almacenar datos en MongoDB.","Los índices no se pueden utilizar en MongoDB."],respuesta: "Los índices son estructuras de datos que permiten buscar documentos de forma más rápida y eficiente."});
db.preguntas.insertOne({pregunta: "¿Cómo se utiliza el método update() para modificar documentos en MongoDB?",opciones: ["El método update() se utiliza para agregar nuevos campos a un documento.","El método update() se utiliza para eliminar documentos de una colección.","El método update() se utiliza para modificar el valor de los campos existentes en un documento."],respuesta: "El método update() se utiliza para modificar el valor de los campos existentes en un documento."});
db.preguntas.insertOne({pregunta: "¿Cómo se eliminan documentos de una colección en MongoDB?",opciones: ["Se utiliza el método deleteOne() para eliminar un solo documento.","Se utiliza el método deleteMany() para eliminar varios documentos.","Se pueden eliminar documentos utilizando cualquier método de consulta."],respuesta: "Se utiliza el método deleteOne() para eliminar un solo documento y Se utiliza el método deleteMany() para eliminar varios documentos."});
db.preguntas.insertOne({pregunta: "¿Qué son las agregaciones en MongoDB y para qué se utilizan?",opciones: ["Las agregaciones son operaciones que permiten combinar y transformar datos de varias colecciones.","Las agregaciones son necesarias para almacenar datos en MongoDB.","Las agregaciones no se pueden utilizar en MongoDB."],respuesta: "Las agregaciones son operaciones que permiten combinar y transformar datos de varias colecciones."});
db.preguntas.insertOne({pregunta: "¿Cómo se asegura la seguridad de los datos en MongoDB?",opciones: ["Se puede utilizar la autenticación y la autorización para controlar el acceso a los datos.","Se puede cifrar los datos en reposo y en tránsito.","Se pueden utilizar ambas opciones para asegurar los datos en MongoDB."],respuesta: "Se pueden utilizar ambas opciones para asegurar los datos en MongoDB."});

db.preguntas.insertOne({ pregunta: "¿Cuál es el propósito principal del framework Express en Node.js?", opciones: ["Crear interfaces gráficas de usuario.","Facilitar el desarrollo de aplicaciones web dinámicas.","Gestionar bases de datos relacionales.","Implementar protocolos de comunicación de red."],respuesta: "Facilitar el desarrollo de aplicaciones web dinámicas."});
db.preguntas.insertOne({ pregunta: "¿Cómo se crea una aplicación Express básica?", opciones: ["Utilizando el módulo `http` de Node.js.","Importando y ejecutando el paquete `express` en un archivo JavaScript.","Creando un servidor web con el protocolo HTTP.","Utilizando un framework de desarrollo web como React o Vue.js."],respuesta: "Importando y ejecutando el paquete `express` en un archivo JavaScript."});
db.preguntas.insertOne({pregunta: "¿Qué son las rutas en Express y cómo se definen?",opciones: ["Las rutas son patrones que coinciden con las URLs de las solicitudes HTTP.","Las rutas son variables que almacenan los parámetros de las solicitudes HTTP.","Las rutas son funciones que procesan las solicitudes HTTP.","Las rutas son métodos del objeto http de Node.js."],respuesta: "Las rutas son patrones que coinciden con las URLs de las solicitudes HTTP."});
db.preguntas.insertOne({pregunta: "¿Qué es el middleware en Express y para qué se utiliza?",opciones: ["El middleware es una función que se ejecuta antes de que se procese una solicitud HTTP.","El middleware es un tipo de dato especial en JavaScript.","El middleware es una librería de terceros para Express.","El middleware es un protocolo de comunicación de red."],respuesta: "El middleware es una función que se ejecuta antes de que se procese una solicitud HTTP."});

db.preguntas.insertOne({pregunta: "¿Cómo se manejan los parámetros de las solicitudes HTTP en Express?",opciones: ["Utilizando el objeto req en la función del controlador de ruta.","Utilizando el método parse() del objeto http de Node.js.","Accediendo a las propiedades del objeto window en el navegador.","Utilizando una librería de terceros para el manejo de parámetros."],respuesta: "Utilizando el objeto req en la función del controlador de ruta."});
db.preguntas.insertOne({pregunta: "¿Cómo se envían respuestas desde una aplicación Express?", opciones: ["Utilizando el método send() del objeto res.","Utilizando el método write() del objeto res.","Utilizando el método end() del objeto res.","Utilizando todos los métodos anteriores en conjunto."],respuesta: "Utilizando todos los métodos anteriores en conjunto."});
db.preguntas.insertOne({pregunta: "¿Cómo se utiliza el método res.render() en Express para renderizar plantillas HTML?",opciones: ["El método res.render() requiere una plantilla HTML como argumento.","El método res.render() requiere un motor de plantillas como EJS o Pug como argumento.","El método res.render() requiere un objeto con datos para ser insertados en la plantilla como argumento.","Todas las opciones anteriores son correctas."],respuesta: "Todas las opciones anteriores son correctas."});
db.preguntas.insertOne({pregunta: "¿Cómo se implementa la seguridad en una aplicación Express?",opciones: ["Utilizando el módulo http de Node.js para autenticar usuarios.","Utilizando un framework de seguridad como Passport.js.","Validando los datos de entrada del usuario.","Implementando todas las opciones anteriores."],respuesta: "Implementando todas las opciones anteriores."});
db.preguntas.insertMany([{pregunta: "¿Qué es React?",opciones: ["Un framework de desarrollo backend.","Un framework para desarrollo de aplicaciones móviles.","Una librería de JavaScript para construir interfaces de usuario.","Un entorno de ejecución de JavaScript."],respuesta: "Una librería de JavaScript para construir interfaces de usuario."},{pregunta: "¿Qué es JSX?",opciones: ["Una extensión de JavaScript que permite escribir HTML dentro de JavaScript.","Una hoja de estilo en cascada.","Un método para manipular el DOM.","Un protocolo de comunicación entre el servidor y el cliente."],respuesta: "Una extensión de JavaScript que permite escribir HTML dentro de JavaScript."},{pregunta: "¿Cómo se crea un componente funcional en React?",opciones: ["function MyComponent() { return <div>Hola</div>; }","const MyComponent = () => { return <div>Hola</div>; }","ambas respuestas anteriores","ninguna de las respuestas anteriores"],respuesta: "ambas respuestas anteriores"},{pregunta: "¿Cuál es el hook utilizado para manejar el estado en componentes funcionales?",opciones: ["useEffect","useState","useContext","useReducer"],respuesta: "useState"},{pregunta: "¿Qué función se utiliza para renderizar un componente en el DOM?",opciones: ["ReactDOM.render()","React.render()","React.createElement()","React.mount()"],respuesta: "ReactDOM.render()"},{pregunta: "¿Qué método del ciclo de vida de un componente se llama después de que el componente se ha montado?",opciones: ["componentDidUpdate","componentWillMount","componentDidMount","componentWillUnmount"],respuesta: "componentDidMount"},{pregunta: "¿Qué es un 'estado' en React?",opciones: ["Una variable que contiene información sobre el DOM","Una propiedad que nunca cambia","Un objeto que determina cómo se comporta un componente","Una función que se utiliza para actualizar el DOM"],respuesta: "Un objeto que determina cómo se comporta un componente"},{pregunta: "¿Cómo se pasan datos de un componente padre a un componente hijo?",opciones: ["Mediante el uso de props","Mediante el uso de hooks","Mediante el uso de estados","Mediante el uso de contextos"],respuesta: "Mediante el uso de props"},{pregunta: "¿Cuál es la finalidad del hook useEffect?",opciones: ["Actualizar el estado de un componente","Realizar efectos secundarios en componentes funcionales","Crear un contexto global para la aplicación","Manipular el DOM directamente"],respuesta: "Realizar efectos secundarios en componentes funcionales"},{pregunta: "¿Qué hace la propiedad 'key' en React?",opciones: ["Identifica de manera única a un elemento en una lista","Define un enlace a una clave de estado","Permite acceder a un valor de contexto","Declara un estado inicial para un componente"],respuesta: "Identifica de manera única a un elemento en una lista"}]);
db.preguntas.insertMany([{pregunta: "¿Qué es Node.js?",opciones: ["Un entorno de ejecución para JavaScript en el servidor.","Una biblioteca para crear interfaces de usuario.","Un sistema de gestión de bases de datos.","Un framework para el desarrollo de aplicaciones móviles."],respuesta: "Un entorno de ejecución para JavaScript en el servidor."},{pregunta: "¿Cuál de las siguientes es una característica principal de Node.js?",opciones: ["Bloquea las operaciones de entrada y salida.","Es síncrono por defecto.","Utiliza un modelo de I/O no bloqueante y asíncrono.","Es exclusivo para aplicaciones frontend."],respuesta: "Utiliza un modelo de I/O no bloqueante y asíncrono."},{pregunta: "¿Qué gestor de paquetes se utiliza comúnmente con Node.js?",opciones: ["npm","pip","gem","maven"],respuesta: "npm"},{pregunta: "¿Qué comando se utiliza para inicializar un proyecto de Node.js?",opciones: ["node init","npm init","npm start","node start"],respuesta: "npm init"},{pregunta: "¿Qué módulo se utiliza para manejar las rutas en una aplicación de Node.js?",opciones: ["http","fs","path","express"],respuesta: "express"},{pregunta: "¿Cómo se importa un módulo en Node.js?",opciones: ["include 'modulo';","require('modulo');","importar('modulo');","load 'modulo';"],respuesta: "require('modulo');"},{pregunta: "¿Cuál es el propósito del archivo package.json?",opciones: ["Definir los estilos CSS de la aplicación.","Especificar las dependencias y configuraciones del proyecto.","Contener el código fuente de la aplicación.","Guardar datos de la base de datos."],respuesta: "Especificar las dependencias y configuraciones del proyecto."},{pregunta: "¿Cuál de los siguientes métodos se utiliza para leer un archivo en Node.js?",opciones: ["fs.readFile()","fileSystem.read()","fs.getFile()","fileSystem.readFile()"],respuesta: "fs.readFile()"},{pregunta: "¿Qué hace el siguiente comando en Node.js: 'node app.js'?",opciones: ["Inicia un servidor web en el navegador.","Compila el archivo app.js.","Ejecuta el archivo app.js con Node.js.","Abre el archivo app.js en un editor de texto."],respuesta: "Ejecuta el archivo app.js con Node.js."},{pregunta: "¿Qué hace el método 'app.listen()' en una aplicación de Express?",opciones: ["Configura las rutas de la aplicación.","Cierra el servidor de la aplicación.","Establece la conexión con la base de datos.","Inicia un servidor y escucha en un puerto específico."],respuesta: "Inicia un servidor y escucha en un puerto específico."}]);
